# How to build Libm on windows using SCons

## Dependency libraries:
    1. AOCL LibM test framework uses GNU MPFR (an open source multi-precision floating point) and GMP (GNU Multiple Precision Arithmetic) library
    Maintain following directory structure to compile libm on windows. Please note the aocl-libm and mpfr folders should be placed in the same directory.

    Main_Directory
    +---aocl-libm
    |
    +---mpfr
        +---gmp_x64-windows
        |   +---bin
        |   |   +---gmp.dll
        |   |
        |	+---include
        |   |   +---gmp.h
        |   |   |
        |	|   +---gmpxx.h
        |   |
        |	+---lib
        |       +---gmp.lib
        |
        +---mpfr_x64-windows
            +---bin
            |   +---mpfr-6.dll
            |
            +---include
            |   +---mpf2mpfr.h
            |   |
            |   +---mpfr.h
            |
            +---lib
                +---mpfr.lib

    If you find errors in mpfr library during libm compilation or usage then follow troubleshooting section at the end.

    2. AOCL LibM library uses AOCL libcpuid library to detect Zen architecture. Follow the steps below to compile AOCL libcpuid library on windows.
           a)Clone the libcpuid library code base.
               git clone git@github.amd.com:AOCL/aocl-cpuid.git
           b)Follow the steps mentioned in the document below to compile the libraries.
               https://github.amd.com/AOCL/aocl-cpuid/blob/main/BUILD_ON_WIN.md
           c)Maintain following directory structure of libcpuid files to compile LibM on windows
               libcpuid
               +---include
               |   +---alci
               |       +---*.h files
               |
               +---lib
                   +---cpu.dll
                   |
                   +---cpu.lib
                   |
                   +---cpu_static.lib

## Installing virtualenv
    1. pip install virtualenv

## Activating virtual environment
    Use Virtual Environment to install python3 and scons inside.
    1. "<vcvarsall file path>\vcvarsall.bat" amd64
    2. cd aocl-libm
    3. virtualenv -p python .venv3
    4. .venv3\Scripts\activate
    5. pip install scons

## Start building libm library
    scons ALM_CC="<clang executable path>" ALM_CXX="<clang++ executable path>" --cpuid_install_path="<libcpuid library path>"

## Building test framework
    scons ALM_CC="<clang executable path>" ALM_CXX="<clang++ executable path>" --cpuid_install_path="<libcpuid library path>" gtests

## To build in parallel, use following flag
    -j32

## To build with verbosity, use following flag
    --verbose=1

## To build with debug info, use following flag
    --debug_mode=all

## To build with avx512 feature, use following flag
    --arch_config=avx512

## To build with ASAN feature, use following flag
    --use_asan=1

## To link static/dynamic libcpuid library use following flag. 0 for static linking and 1 for dynamic linking.
   Default is static linking.
    --cpuid_link_static=1


## To run the tests
    To run the AOCL LibM test framework.

    set PATH=%PATH%;..\mpfr\mpfr_x64-windows\bin
    set PATH=%PATH%;..\mpfr\gmp_x64-windows\bin
    build\aocl-release\gtests\cos\test_cos.exe -i f -e 1 -t perf

    Test parameters:
    Input type:
    -i (f for single precision, d for double precision)
    Vector input count:
    -e (1 for scalar, 2/4/8 for vector input variants)
    Test Type:
    -t (perf for performance, conf for conformance, accu for accuracy)
    Input count:
    -c (Integer value for number of inputs)
    Input range:
    -r (provide range: start,stop example: -r -50,50)

## Troubleshooting
    If you find errors in mpfr library during libm compilation or usage, then re-install vcpkg
    1. Download VCPKG from https://github.com/microsoft/vcpkg.git
    2. Install VCPKG using the following commands
        ○ .\vcpkg\bootstrap-vcpkg.bat
        ○ .\vcpkg.exe install yasm-tool:x86-windows
        ○ .\vcpkg.exe install gmp[core]:x64-windows
        ○ .\vcpkg.exe install mpfr:x64-windows
