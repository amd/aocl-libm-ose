#
# Copyright (C) 2008-2022 Advanced Micro Devices, Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 3. Neither the name of the copyright holder nor the names of its contributors
#    may be used to endorse or promote products derived from this software without
#    specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
# OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.


import os
from os import path
from os.path import join as joinpath

Import('mpenv')

excludes = Glob('*_old.c')

# Get all Linux files, excluding the list
linux_files = Glob('*linux.c')

# We first exclude the OS specific files
excludes += linux_files

excluded_list = [f.name for f in excludes]

excluded_list += [
     'cospi.c',
     'fdim.c',
     'finite.c',
     'fmax.c',
     'fmin.c',
     'frexp.c',
     'ilogb.c',
     'ldexp.c',
     'logb.c',
     'mparith_c.c',
     'mparith_f.c',
     'sincos.c',
     'sinpi.c',
     'tanpi.c',

     'controlword.c',
     'cycles.c',
     'mallocDebug.c',
     'nanny.c',
     'statusword.c',
]

mparith_srcs = Glob('*.c', exclude=excluded_list)
mparith_srcs += Glob('mparith/*.c', exclude=excluded_list)

#print([x.path for x in mparith_srcs])

objs = mpenv.StaticObject(mparith_srcs)

libmp = mpenv.Library('mparith%s'%mpenv['MPVARIANT'], objs)
if mpenv['HOST_OS'] != 'win32':
    libmpso = mpenv.SharedLibrary('mparith%s'%mpenv['MPVARIANT'], objs)
else:
    libmpso = mpenv.SharedLibrary('mparith%s'%mpenv['MPVARIANT'], objs, no_import_lib=True)

Return('libmp', 'libmpso')

