#
# Copyright (C) 2008-2022 Advanced Micro Devices, Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 3. Neither the name of the copyright holder nor the names of its contributors
#    may be used to endorse or promote products derived from this software without
#    specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
# OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.


Import('env')

e = env.Clone()

if e['HOST_OS'] == 'win32':
    exclude_flags=['/std:c17', '-funsigned-char', '-Wno-unused-parameter', '-march=native', '-std:c++17']
    for i in exclude_flags:
        if i in e['CFLAGS']:
            e['CFLAGS'].remove(i)
            e['CCFLAGS'].remove(i)

    e.Append(
        CFLAGS = ['-DWINDOWS'],
        LINKFLAGS = ['/SUBSYSTEM:CONSOLE','/NODEFAULTLIB:libcmt.lib'],
        LIBS = ['Shlwapi']
    )

if e['HOST_OS'] == 'win32':
    if e['BUILD'] == 'debug':
        e['PDB'] = 'test_log1p.pdb'

log1p_srcs = Glob('*.cc')

log1p = e.Program('test_log1p', log1p_srcs)

Return('log1p')

