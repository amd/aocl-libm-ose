# Copyright (C) 2018, AMD. All rights Reserved
#
# Author: Prem Mallappa <pmallapp@amd.com>

# Inherit global environment
Import('env')
from os.path import join as joinpath

builddir = joinpath(env['BUILDROOT'], 'src')

e = env.Clone()
e.Append(
    CCFLAGS = ['-Wall', '-W', '-Wstrict-prototypes', '-Werror',
               #'-Wno-unused-but-set-parameter', 
               '-Wno-unused-parameter', 
               '-fPIC', '-O1',
               '-mavx', '-mavx2', '-march=znver1'],
    ASFLAGS = ['-Wall', '-W', '-fPIC'
		],
    CPPDEFINES = ['AVX_XOP_FMA4_FMA3'
		],
    #   CPPPATH = [''],
    #   CCFLAGS = [],
    STATIC_AND_SHARED_OBJECTS_ARE_THE_SAME = 1
)

# The set of source files associated with this SConscript file.
source = Glob('*.[cS]', exclude=['map.S'])       + \
    Glob('isa/avx/gas/*.[cS]')    + \
    Glob('isa/avx2/gas/*.[cS]')   + \
    Glob('isa/fma4/gas/*.[cS]')   + \
    Glob('ref/*.[c]', exclude=['ref/exp2.c', 'ref/exp_tables*.c'])             + \
    Glob('isa/avx512/gas/*.[cS]') + \
    Glob('isa/fma3/gas/*.[S]')

optimized_src = SConscript('optmized/SConscript',
                           exports = {'env' : e},
                           duplicate = 0,
                           src_dir = '#src/optmized',
                           variant_dir = joinpath(builddir, 'optmized'))

#print('lib sources' , list(source))

objects = e.StaticObject(source) + optimized_src

libm = e.StaticLibrary('amdlibm', objects)
libmso = e.SharedLibrary('amdlibm', objects)

Return('libm', 'libmso')

