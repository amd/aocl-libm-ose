# Copyright (C) 2018-2020, Advanced Micro Devices. All rights Reserved
#
# Author: Prem Mallappa <pmallapp@amd.com>

# Inherit global environment
Import('env')
from os.path import join as joinpath

e = env.Clone()

incpaths = [
	Dir('#/src/optmized/'),
 ]


e.Append(
    CCFLAGS = ['-Wall', '-W', '-Wstrict-prototypes', '-Werror',
               #'-Wno-unused-but-set-parameter',
               '-Wno-unused-parameter', '-O3',
               '-fPIC',
               '-mavx2', '-march=znver2'],
    CPPPATH = incpaths,
    # CCFLAGS = [],
    # LINKFLAGS = ['-T$LINKERSCRIPT'],
    LINKERSCRIPT = 'src/ld-syms-libm.lds',
    STATIC_AND_SHARED_OBJECTS_ARE_THE_SAME = 1
)

excluded_srcs = []

fast_srcs = Glob('*.c', exclude=excluded_srcs)
fast_srcs += Glob('_exp_data.c')

fast_objs = e.StaticObject(fast_srcs)

#print('lib sources' , list(source))

almfast = e.StaticLibrary('almfast', fast_objs)
almfastso = e.SharedLibrary('almfast', fast_objs)

Return('almfast', 'almfastso')

