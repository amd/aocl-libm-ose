# Copyright (C) 2008-2020 Advanced Micro Devices, Inc. All rights reserved.
#
# Author: Prem Mallappa <pmallapp@amd.com>

# Inherit global environment
Import('env')
from os.path import join as joinpath

builddir = joinpath(env['BUILDROOT'], 'src', 'optmized')

e = env.Clone()

# These rearrangements are not value-safe:
#	 (a ⊕ b) ⊕ c ⇒ a ⊕ (b ⊕ c)
#	 a ⊗ (b ⊕ c) ⇒ (a ⊗ b) ⊕ (a ⊕ c)
#
# To Disallow these changes in gcc remove -ffast-math
if '-ffast-math' in e['CFLAGS']:
    e['CFLAGS'].remove('-ffast-math')

e.Append(
    CFLAGS = ['-fPIC']
)

try:
    dbg_mode=env['debug_mode']
except KeyError as err:
    print("Keyerror, debug_mode not found, setting to none", err)
    dbg_mode='none'

if dbg_mode == 'libs' or dbg_mode == 'all':
    e.Append(
        CCFLAGS = ['-g']
       )
    # remove all optimizations on command line
    opt_list=["-O%s"%x for x in range(1, 10)]
    opt_list.append('-Os')
    for opt in opt_list:
        try:
            e['CFLAGS'].remove(opt)
        except ValueError as err:
            pass
else:
    e.Append(
        CCFLAGS = ['-O3'],
    )

experiment_src=[
	'expm1f.c',
	]

source = Glob('*.c', exclude=experiment_src)
source += Glob('data/*.c')

vec_objs   = SConscript('vec/SConscript',
                        exports    = {'env' : e},
                        duplicate  = 0,
                        src_dir    = '#src/optmized/vec',
			            variant_dir= joinpath(builddir, 'vec'))

objs = e.StaticObject(source) + vec_objs

Return('objs')
