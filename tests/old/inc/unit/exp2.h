//R.obtained=FN_PROTOTYPE(exp2)(P1.input)
//double,double,ExcFlags
//P1 R E
//unsigned long long int|double, unsigned  long long int|double,ExcFlags|ExcFlags
//R.V3[j] = amd_ref_exp2(P1.V3[j])
//double double ExcFlags
//ULP amd_ref_exp2_ULP(P1.V3[j],R.V3[j],&testdata[k].R.ulp[j], &testdata[k].R.relative_error[j])
//testdata[j].R.MaxUlp()

static struct data input[] =
{
     { F64_POS_SNAN , F64_POS_SNAN_Q ,EXC_CHK_INVL},
    { F64_NEG_SNAN , F64_NEG_SNAN_Q ,EXC_CHK_INVL},
    { F64_POS_QNAN , F64_POS_QNAN   ,EXC_CHK_NONE},
    { F64_NEG_QNAN , F64_NEG_QNAN   ,EXC_CHK_NONE},
    { F64_POS_INF  , F64_POS_INF    ,EXC_CHK_NONE},
    { F64_NEG_INF  , F64_POS_ZERO   ,EXC_CHK_NONE},
    { F64_POS_ONE  , 0x4000000000000000LL ,EXC_CHK_NONE},
    { F64_NEG_ONE  , 0x3fe0000000000000LL,EXC_CHK_NONE},
    { F64_POS_ZERO , F64_POS_ONE    ,EXC_CHK_NONE},
    { F64_NEG_ZERO , F64_POS_ONE    ,EXC_CHK_NONE},
    { F64_POS_HDENORM, F64_POS_ONE  ,EXC_CHK_NONE},
    { F64_NEG_HDENORM, F64_POS_ONE  ,EXC_CHK_NONE},
    { F64_POS_LDENORM, F64_POS_ONE  ,EXC_CHK_NONE},
    { F64_NEG_LDENORM, F64_POS_ONE  ,EXC_CHK_NONE},
    { F64_POS_HNORMAL, F64_POS_INF  ,EXC_CHK_OVFL},
    { F64_NEG_HNORMAL, F64_POS_ZERO ,EXC_CHK_UNFL},
    { F64_POS_LNORMAL, F64_POS_ONE  ,EXC_CHK_NONE},
    { F64_NEG_LNORMAL, F64_POS_ONE  ,EXC_CHK_NONE},    
    { F64_POS_PIBY2,0x4007c3f74a733d03LL,EXC_CHK_NONE},  //pi/2
   {0x3EE0624DD2F1A9FCLL,0x3ff00005ada3910aLL,EXC_CHK_NONE},  //0.0000078125
   {0x3EF0624DC31C6CA1LL,0x3ff0000b5b491afeLL,EXC_CHK_NONE},  //0.0000156249991
   {0x3FE02467BE553AC5LL,0x3ff6b27d51f59f35LL,EXC_CHK_NONE},  //0.504444
   {0x3FF0000000000000LL,0x4000000000000000LL,EXC_CHK_NONE},  //1
   {0x4000000000000000LL,0x4010000000000000LL,EXC_CHK_NONE},  //2
   {0x3D3C25C268497682LL,0x3ff0000000000138LL,EXC_CHK_NONE},  //1.0000000e-13
   {F64_POS_PI,          0x4021a66390580a2cLL,EXC_CHK_NONE},  //pi
   {0x401921FB54442D18LL,0x40537855bf832a9aLL,EXC_CHK_NONE},  //2pi
   {0x4024000000000000LL,0x4090000000000000LL,EXC_CHK_NONE},  //10
   {0x408F400000000000LL,0x7e70000000000000LL,EXC_CHK_NONE},  //1000
   {0x4060000000000000LL,0x47f0000000000000LL,EXC_CHK_NONE},  //128
   {0x408FFC0000000000LL,0x7fe6a09e667f3bcdLL,EXC_CHK_NONE},  //1023.5
   {0x4090000000000000LL,0x7ff0000000000000LL,EXC_CHK_OVFL},  //1024
   {0x4093780000000000LL,0x7ff0000000000000LL,EXC_CHK_OVFL},  //1246
   {0xC090CA0000000000LL,0x0000000000000000LL,EXC_CHK_UNFL},  //-1074.5
   {0xC090F00000000000LL,0x0000000000000000LL,EXC_CHK_UNFL},  //-1084
   {0xC070000000000000LL,0x2ff0000000000000LL,EXC_CHK_NONE},  //-256
   {0xc086232bdd7abcd2LL,0x13a84fce6ff65a5cLL,EXC_CHK_NONE},  // -708.3964185322641 smallest normal result
   {0xc086232bdd7abcd3LL,0x13a84fce6ff65840LL,EXC_CHK_NONE},  // -708.3964185322642 largest denormal result
   {0xC08FFFFDF3B645A2LL,0x000400b5c471e693LL,EXC_CHK_UNFL},  //-1023.999
   {0x408fffffffffffffLL,0x7feffffffffffd3aLL,EXC_CHK_NONE},  //1024   largest value  --
   {0x4090000000000000LL,0x7ff0000000000000LL,EXC_CHK_OVFL},  //1024   largest value
   {0x4090000000000001LL,0x7ff0000000000000LL,EXC_CHK_OVFL},  //1024   overflow
   {0x4200000000000000LL,0x7ff0000000000000LL,EXC_CHK_OVFL},  //large   overflow
   {0xC05021EB851EB852LL,0x3be629688baea976LL,EXC_CHK_NONE}, // -64.53
   {0xC0FF5D35B020C49CLL,0x0000000000000000LL,EXC_CHK_UNFL}, // -128467.3555
   {0xBFD3333333333333LL,0x3fe9fdf8bcce533eLL,EXC_CHK_NONE}, // -0.3
   {0xBFE48E410B630A91LL,0x3fe4804d4a5906e6LL,EXC_CHK_NONE}, // -0.642365
   {0xBFE0000000000000LL,0x3fe6a09e667f3bcdLL,EXC_CHK_NONE}, // -0.5
   {0x3FD3333333333333LL,0x3ff3b2c47bff8329LL,EXC_CHK_NONE}, // 0.3
   {0x3FE48E410B630A91LL,0x3ff8f96366d86362LL,EXC_CHK_NONE}, // 0.642365
   {0x3FE0000000000000LL,0x3ff6a09e667f3bcdLL,EXC_CHK_NONE}, // 0.5
   {0x405021EB851EB852LL,0x43f71a55800823b3LL,EXC_CHK_NONE}, // 64.53
   {0x40FF5D35B020C49CLL,0x7ff0000000000000LL,EXC_CHK_OVFL}, // 128467.3555
   {0xC08F400000000000LL,0x0170000000000000LL,EXC_CHK_NONE}, // -1000
   {0x408F400000000000LL,0x7e70000000000000LL,EXC_CHK_NONE}, // 1000
   {0x0000000000000000LL,0x3ff0000000000000LL,EXC_CHK_NONE},

};

