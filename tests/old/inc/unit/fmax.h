//R.obtained=FN_PROTOTYPE(fmax)(P1.input, P2.input)
//double,double,double,ExcFlags
//P1 P2 R E
//unsigned long long int|double, unsigned long long int|double, unsigned  long long int|double,ExcFlags|ExcFlags
//R.V3[j] = fmax(P1.V3[j],P2.V3[j])
//double double double ExcFlags
//ULP amd_ref_fmax_ULP(P1.V3[j],P2.V3[j],R.V3[j],&testdata[k].R.ulp[j], &testdata[k].R.relative_error[j])
//testdata[j].R.MaxUlp()

static struct data input[] =
{
      {F64_POS_ZERO,F64_NEG_ZERO, F64_POS_ZERO, EXC_CHK_NONE },  //0
      {F64_NEG_ZERO,F64_NEG_ZERO, F64_NEG_ZERO, EXC_CHK_NONE },  //0

      {F64_POS_ZERO,F64_POS_ZERO, F64_POS_ZERO, EXC_CHK_NONE },  //0
      {F64_NEG_ZERO,F64_POS_ZERO, F64_POS_ZERO, EXC_CHK_NONE },  //0

      {F64_POS_ZERO,0xBFF0000000000000, F64_POS_ZERO, EXC_CHK_NONE },  //0,-1
      {F64_NEG_ZERO,0xBFF0000000000000, F64_NEG_ZERO, EXC_CHK_NONE },  //0,-1

      {F64_POS_ZERO,0x3FF0000000000000, 0x3FF0000000000000, EXC_CHK_NONE },  //0,1
      {F64_NEG_ZERO,0x3FF0000000000000, 0x3FF0000000000000, EXC_CHK_NONE },  //0,1


      {0xBFF0000000000000,F64_POS_ZERO, F64_POS_ZERO, EXC_CHK_NONE },
      {0xBFF0000000000000,F64_NEG_ZERO, F64_NEG_ZERO, EXC_CHK_NONE },

      {0x3FF0000000000000,F64_POS_ZERO, 0x3FF0000000000000, EXC_CHK_NONE },
      {0x3FF0000000000000,F64_NEG_ZERO, 0x3FF0000000000000, EXC_CHK_NONE },


      {0x3FF0000000000000,F64_NEG_INF, 0x3FF0000000000000, EXC_CHK_NONE },
      {0xBFF0000000000000,F64_NEG_INF, 0xBFF0000000000000, EXC_CHK_NONE },


      {0x3FF0000000000000,F64_POS_INF, F64_POS_INF, EXC_CHK_NONE },
      {0xBFF0000000000000,F64_POS_INF, F64_POS_INF, EXC_CHK_NONE },

      {F64_POS_INF,0x3FF0000000000000, F64_POS_INF, EXC_CHK_NONE },
      {F64_NEG_INF,0xBFF0000000000000, 0xBFF0000000000000, EXC_CHK_NONE },

      {F64_POS_INF,F64_NEG_INF, F64_POS_INF, EXC_CHK_NONE },
      {F64_NEG_INF,F64_NEG_INF, F64_NEG_INF, EXC_CHK_NONE },

      {F64_POS_INF,F64_POS_INF, F64_POS_INF, EXC_CHK_NONE },
      {F64_NEG_INF,F64_POS_INF, F64_POS_INF, EXC_CHK_NONE },


      {F64_POS_SNAN, F64_POS_SNAN, F64_POS_SNAN,EXC_CHK_INVL },  //
      {F64_NEG_SNAN, F64_POS_SNAN, F64_NEG_SNAN,EXC_CHK_INVL },  //

      {F64_POS_SNAN, F64_NEG_SNAN, F64_POS_SNAN,EXC_CHK_INVL },  //
      {F64_NEG_SNAN, F64_NEG_SNAN, F64_NEG_SNAN,EXC_CHK_INVL },  //


      {0x9642159012341275,0x7EEBE57590909090,0x7EEBE57590909090, EXC_CHK_NONE},
      {0x7EEBE57590909090,0x1642159012341275,0x7EEBE57590909090, EXC_CHK_NONE},

      {0x164243a123703836,0x1642159078787878,0x164243a123703836, EXC_CHK_NONE},
      {0x71EBD59616925632,0x70EAD49726345243,0x71EBD59616925632, EXC_CHK_NONE},


};

