//R.obtained=FN_PROTOTYPE(fmaxf)(P1.input, P2.input)
//float,float,float,ExcFlags
//P1 P2 R E
//unsigned int|float, unsigned int|float, unsigned int|float,ExcFlags|ExcFlags
//R.V3[j] = fmaxf(P1.V3[j],P2.V3[j])
//float float float ExcFlags
//ULP amd_ref_fmaxf_ULP(P1.V3[j],P2.V3[j],R.V3[j],&testdata[k].R.ulp[j], &testdata[k].R.relative_error[j])
//testdata[j].R.MaxUlp()

static struct data input[] =
{
      {F32_POS_ZERO,F32_NEG_ZERO, F32_POS_ZERO, EXC_CHK_NONE },  //0
      {F32_NEG_ZERO,F32_NEG_ZERO, F32_NEG_ZERO, EXC_CHK_NONE },  //0

      {F32_POS_ZERO,F32_POS_ZERO, F32_POS_ZERO, EXC_CHK_NONE },  //0
      {F32_NEG_ZERO,F32_POS_ZERO, F32_POS_ZERO, EXC_CHK_NONE },  //0

      {F32_POS_ZERO,0xBF800000, F32_POS_ZERO, EXC_CHK_NONE },  //0,-1
      {F32_NEG_ZERO,0xBF800000, F32_NEG_ZERO, EXC_CHK_NONE },  //0,-1

      {F32_POS_ZERO,0x3F800000, 0x3F800000, EXC_CHK_NONE },  //0,1
      {F32_NEG_ZERO,0x3F800000, 0x3F800000, EXC_CHK_NONE },  //0,1


      {0xBF800000,F32_POS_ZERO, F32_POS_ZERO, EXC_CHK_NONE },
      {0xBF800000,F32_NEG_ZERO, F32_NEG_ZERO, EXC_CHK_NONE },

      {0x3F800000,F32_POS_ZERO, 0x3F800000, EXC_CHK_NONE },
      {0x3F800000,F32_NEG_ZERO, 0x3F800000, EXC_CHK_NONE },


      {0x3F800000,F32_NEG_INF, 0x3F800000, EXC_CHK_NONE },
      {0xBF800000,F32_NEG_INF, 0xBF800000, EXC_CHK_NONE },


      {0x3F800000,F32_POS_INF, F32_POS_INF, EXC_CHK_NONE },
      {0xBF800000,F32_POS_INF, F32_POS_INF, EXC_CHK_NONE },

      {F32_POS_INF,0x3F800000, F32_POS_INF, EXC_CHK_NONE },
      {F32_NEG_INF,0xBF800000, 0xBF800000, EXC_CHK_NONE },

      {F32_POS_INF,F32_NEG_INF, F32_POS_INF, EXC_CHK_NONE },
      {F32_NEG_INF,F32_NEG_INF, F32_NEG_INF, EXC_CHK_NONE },

      {F32_POS_INF,F32_POS_INF, F32_POS_INF, EXC_CHK_NONE },
      {F32_NEG_INF,F32_POS_INF, F32_POS_INF, EXC_CHK_NONE },


      {F32_POS_SNAN, F32_POS_SNAN, F32_POS_SNAN,EXC_CHK_INVL },  //
      {F32_NEG_SNAN, F32_POS_SNAN, F32_NEG_SNAN,EXC_CHK_INVL },  //

      {F32_POS_SNAN, F32_NEG_SNAN, F32_POS_SNAN,EXC_CHK_INVL },  //
      {F32_NEG_SNAN, F32_NEG_SNAN, F32_NEG_SNAN,EXC_CHK_INVL },  //

      {0x96421590,0x7EEBE575,0x7EEBE575, EXC_CHK_NONE},
      {0x7EEBE575,0x16421590,0x7EEBE575, EXC_CHK_NONE},

      {0x164243a1,0x16421590,0x164243a1, EXC_CHK_NONE},
      {0x71EBD596,0x69EAD497,0x71EBD596, EXC_CHK_NONE},

};

