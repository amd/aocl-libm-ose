//R.obtained=FN_PROTOTYPE(log1p)(P1.input)
//double,double,ExcFlags
//P1 R E
//unsigned long long int|double, unsigned  long long int|double,ExcFlags|ExcFlags
//R.V3[j] = amd_ref_log1p(P1.V3[j])
//double double ExcFlags
//ULP amd_ref_log1p_ULP(P1.V3[j],R.V3[j],&testdata[k].R.ulp[j], &testdata[k].R.relative_error[j])
//testdata[j].R.MaxUlp()

static struct data input[] =
{
#if 0        
#endif        
    /*Constant inputs from the Constants.h*/
    {F64_POS_SNAN,F64_POS_QNAN,EXC_CHK_INVL}, // invalid
    {F64_NEG_SNAN,F64_POS_QNAN,EXC_CHK_INVL}, // invalid
    {F64_POS_SNAN_Q,F64_POS_QNAN,EXC_CHK_NONE}, // 
    {F64_NEG_SNAN_Q,F64_POS_QNAN,EXC_CHK_NONE}, // 
    {F64_POS_QNAN,F64_POS_QNAN,EXC_CHK_NONE}, // 
    {F64_NEG_QNAN,F64_POS_QNAN,EXC_CHK_NONE}, // 
    {F64_POS_INF,F64_POS_INF,EXC_CHK_NONE}, // 
    {F64_NEG_INF,F64_NEG_QNAN,EXC_CHK_INVL}, // 
    {F64_POS_ONE,0x3FE62E42FEFA39EFLL,EXC_CHK_NONE}, // 
    {F64_NEG_ONE,F64_NEG_INF,EXC_CHK_ZERO}, // 
    {F64_NEG_ZERO,F64_NEG_ZERO,EXC_CHK_NONE}, // 
    {F64_POS_ZERO,F64_POS_ZERO,EXC_CHK_NONE}, // 
    {F64_POS_HDENORM,F64_POS_HDENORM,EXC_CHK_NONE}, // 
    {F64_NEG_HDENORM,F64_NEG_HDENORM,EXC_CHK_NONE}, // 
    {F64_POS_LDENORM,F64_POS_LDENORM,EXC_CHK_NONE}, //15 
    {F64_NEG_LDENORM,F64_NEG_LDENORM,EXC_CHK_NONE}, //

    {F64_POS_HNORMAL,0x40862e42fefa39efLL,EXC_CHK_NONE}, // 
    {F64_NEG_HNORMAL,0xfff8000000000000LL,EXC_CHK_INVL}, // 
    {F64_POS_LNORMAL,F64_POS_LNORMAL,EXC_CHK_NONE}, // 
    {F64_NEG_LNORMAL,F64_NEG_LNORMAL,EXC_CHK_NONE}, // 

    {F64_POS_PI,0x3ff6bcbed6499138LL,EXC_CHK_NONE}, // 
    {F64_NEG_PI,0xfff8000000000000LL,EXC_CHK_INVL}, // 
    {F64_POS_PIBY2,0x3fee3703e42b92e4LL,EXC_CHK_NONE}, // 
    {F64_NEG_PIBY2,0xfff8000000000000LL,EXC_CHK_INVL}, // 


    /*Other Input */
{ 0x0LL, 0x0LL, EXC_CHK_NONE},//25
{ 0x3ee0624dd2f1a9fcLL, 0x3ee06249a135304fLL, EXC_CHK_NONE},
{ 0x3ef0624dc31c6ca1LL, 0x3ef062455fa6667cLL, EXC_CHK_NONE},
{ 0x3fe02467be553ac5LL, 0x3fda239be0d17daeLL, EXC_CHK_NONE},
{ 0x3ff0000000000000LL, 0x3fe62e42fefa39efLL, EXC_CHK_NONE},
{ 0x4000000000000000LL, 0x3ff193ea7aad030bLL, EXC_CHK_NONE},
{ 0x3d3c25c268497682LL, 0x3d3c25c2684974f6LL, EXC_CHK_NONE},
{ 0x400921fb60000000LL, 0x3ff6bcbed6499138LL, EXC_CHK_NONE},
{ 0x401921fb54442d18LL, 0x3fffc4e3465e2150LL, EXC_CHK_NONE},
{ 0x4024000000000000LL, 0x40032ee3b77f374cLL, EXC_CHK_NONE},
{ 0x408f400000000000LL, 0x401ba2909ce4f864LL, EXC_CHK_NONE},
{ 0x4060000000000000LL, 0x40137072a9b5b6cbLL, EXC_CHK_NONE},
{ 0x4086240000000000LL, 0x401a421c25960b33LL, EXC_CHK_NONE},
{ 0x4086280000000000LL, 0x401a42d4d1ff8154LL, EXC_CHK_NONE},
{ 0x408c000000000000LL, 0x401b323bb32ce0e3LL, EXC_CHK_NONE},
{ 0xc086240000000000LL, 0xfff8000000000000LL, EXC_CHK_INVL},
{ 0xc089600000000000LL, 0xfff8000000000000LL, EXC_CHK_INVL},
{ 0xc070000000000000LL, 0xfff8000000000000LL, EXC_CHK_INVL},
{ 0xc086232bdd7abcd2LL, 0xfff8000000000000LL, EXC_CHK_INVL},
{ 0xc086232bdd7abcd3LL, 0xfff8000000000000LL, EXC_CHK_INVL},
{ 0xc087480000000000LL, 0xfff8000000000000LL, EXC_CHK_INVL},
{ 0x40862e42fefa39eeLL, 0x401a43f5a6e6b0c2LL, EXC_CHK_NONE},
{ 0x40862e42fefa39efLL, 0x401a43f5a6e6b0c2LL, EXC_CHK_NONE},
{ 0x40862e42fefa39ffLL, 0x401a43f5a6e6b0c5LL, EXC_CHK_NONE},
{ 0x4200000000000000LL, 0x4036dfb516f28bbfLL, EXC_CHK_NONE},
{ 0xc05021eb851eb852LL, 0xfff8000000000000LL, EXC_CHK_INVL},
{ 0xc0ff5d35b020c49cLL, 0xfff8000000000000LL, EXC_CHK_INVL},
{ 0xbfd3333333333333LL, 0xbfd6d3c324e13f4eLL, EXC_CHK_NONE},
{ 0xbfe48e410b630a91LL, 0xbff073ae445440c6LL, EXC_CHK_NONE},
{ 0xbfe0000000000000LL, 0xbfe62e42fefa39efLL, EXC_CHK_NONE},
{ 0x3fd3333333333333LL, 0x3fd0ca937be1b9dcLL, EXC_CHK_NONE},
{ 0x3fe48e410b630a91LL, 0x3fdfc0b68febaad0LL, EXC_CHK_NONE},
{ 0x3fe0000000000000LL, 0x3fd9f323ecbf984cLL, EXC_CHK_NONE},
{ 0x405021eb851eb852LL, 0x4010bae3641c731eLL, EXC_CHK_NONE},
{ 0x40ff5d35b020c49cLL, 0x402786e154d7d30bLL, EXC_CHK_NONE},
{ 0xc08f400000000000LL, 0xfff8000000000000LL, EXC_CHK_INVL},
{ 0x408f400000000000LL, 0x401ba2909ce4f864LL, EXC_CHK_NONE},
{ 0x0LL, 0x0LL, EXC_CHK_NONE},
};

