//R.obtained=FN_PROTOTYPE(log1pf)(P1.input)
//float,float,ExcFlags
//P1 R E
//unsigned int|float, unsigned int|float,ExcFlags|ExcFlags
//R.V3[j] = amd_ref_log1pf(P1.V3[j])
//float float ExcFlags
//ULP amd_ref_log1pf_ULP(P1.V3[j],R.V3[j],&testdata[k].R.ulp[j], &testdata[k].R.relative_error[j])
//testdata[j].R.MaxUlp()

static struct data input[] =
{

    /*Constant inputs from the Constants.h*/
    {F32_POS_SNAN,F32_POS_QNAN,EXC_CHK_INVL}, // invalid
    {F32_NEG_SNAN,F32_POS_QNAN,EXC_CHK_INVL}, // invalid
    {F32_POS_SNAN_Q,F32_POS_QNAN,EXC_CHK_NONE}, // 
    {F32_NEG_SNAN_Q,F32_POS_QNAN,EXC_CHK_NONE}, // 
    {F32_POS_QNAN,F32_POS_QNAN,EXC_CHK_NONE}, // 
    {F32_NEG_QNAN,F32_POS_QNAN,EXC_CHK_NONE}, // 
    {F32_POS_INF,F32_POS_INF,EXC_CHK_NONE}, // 
    {F32_NEG_INF,F32_NEG_QNAN,EXC_CHK_INVL}, // 
    {F32_POS_ONE,0x3f317218,EXC_CHK_NONE}, // 
    {F32_NEG_ONE,0xff800000,EXC_CHK_ZERO}, //10 
    {F32_NEG_ZERO,F32_NEG_ZERO,EXC_CHK_NONE}, // 
    {F32_POS_ZERO,F32_POS_ZERO,EXC_CHK_NONE}, // 
    {F32_POS_HDENORM,F32_POS_HDENORM,EXC_CHK_NONE}, // 
    {F32_NEG_HDENORM,F32_NEG_HDENORM,EXC_CHK_NONE}, // 
    {F32_POS_LDENORM,F32_POS_LDENORM,EXC_CHK_NONE}, // 
    {F32_NEG_LDENORM,F32_NEG_LDENORM,EXC_CHK_NONE}, //

    {F32_POS_HNORMAL,0x42b17218,EXC_CHK_NONE}, // 
    {F32_NEG_HNORMAL,F32_NEG_QNAN,EXC_CHK_INVL}, // 
    {F32_POS_LNORMAL,0x00800000,EXC_CHK_NONE}, // 
    {F32_NEG_HNORMAL,F32_NEG_QNAN,EXC_CHK_INVL}, // 20

    {F32_POS_PI,0x3fb5e5f7,EXC_CHK_NONE}, // 
    {F32_NEG_PI,F32_NEG_QNAN,EXC_CHK_INVL}, // 
    {F32_POS_PIBY2,0x3f71b81f,EXC_CHK_NONE}, // 
    {F32_NEG_PIBY2,F32_NEG_QNAN,EXC_CHK_INVL}, //

    /*Other Input */
{ 0xbf800000, 0xff800000, EXC_CHK_ZERO},//25
{ 0xbf7e0000, 0xc09b43d5, EXC_CHK_NONE},
{ 0xbf7c0000, 0xc0851592, EXC_CHK_NONE},
{ 0xbefdb976, 0xbf2f2e21, EXC_CHK_NONE},
{ 0x0, 0x0, EXC_CHK_NONE},
{ 0x3f800000, 0x3f317218, EXC_CHK_NONE},
{ 0xbf7ffffe, 0xc17f1402, EXC_CHK_NONE},
{ 0x40090fdb, 0x3f928683, EXC_CHK_NONE},
{ 0x40a90fdb, 0x3feb3f8e, EXC_CHK_NONE},
{ 0x41100000, 0x40135d8e, EXC_CHK_NONE},
{ 0x4479c000, 0x40dd0c55, EXC_CHK_NONE},
{ 0x427c0000, 0x40851592, EXC_CHK_NONE},
{ 0x42ad0000, 0x408f17aa, EXC_CHK_NONE},
{ 0x42ae0000, 0x408f4658, EXC_CHK_NONE},
{ 0x42be0000, 0x40920f24, EXC_CHK_NONE},
{ 0xc2b10000, 0xffc00000, EXC_CHK_INVL},//40
{ 0xc2e20000, 0xffc00000, EXC_CHK_INVL},
{ 0xc3010000, 0xffc00000, EXC_CHK_INVL},
{ 0xc2b0ac4f, 0xffc00000, EXC_CHK_INVL},
{ 0xc2b0ac50, 0xffc00000, EXC_CHK_INVL},
{ 0xc2d00000, 0xffc00000, EXC_CHK_INVL},
{ 0x42af7216, 0x408f895b, EXC_CHK_NONE},
{ 0x42af7217, 0x408f895b, EXC_CHK_NONE},
{ 0x42af7218, 0x408f895c, EXC_CHK_NONE},
{ 0x50000000, 0x41b6fda9, EXC_CHK_NONE},
{ 0xc20e1eb8, 0xffc00000, EXC_CHK_INVL},
{ 0xc6de68b6, 0xffc00000, EXC_CHK_INVL},
{ 0xbfa66666, 0xffc00000, EXC_CHK_INVL},
{ 0xbfd23904, 0xffc00000, EXC_CHK_INVL},
{ 0xbfc00000, 0xffc00000, EXC_CHK_INVL},
{ 0xbf333333, 0xbf9a1bc8, EXC_CHK_NONE},
{ 0xbeb71bf0, 0xbee29c4a, EXC_CHK_NONE},
{ 0xbf000000, 0xbf317218, EXC_CHK_NONE},
{ 0x42061eb8, 0x4062ad51, EXC_CHK_NONE},
{ 0x46de64b6, 0x41241aae, EXC_CHK_NONE},
{ 0xc2ca0000, 0xffc00000, EXC_CHK_INVL},
{ 0x42c60000, 0x40935d8e, EXC_CHK_NONE},


};

