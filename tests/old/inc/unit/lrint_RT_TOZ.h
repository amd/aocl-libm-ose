//R.obtained=FN_PROTOTYPE(lrint)(P1.input)
//double, long int,ExcFlags
//P1 R E
//unsigned long long int|double,unsigned long int|long int, ExcFlags|ExcFlags
//R.V3[j] = lrint(P1.V3[j])
//double, long int,ExcFlags
//ULP amd_ref_lrint_ULP(P1.V3[j],R.V3[j],&testdata[k].R.ulp[j], &testdata[k].R.relative_error[j])
//testdata[j].R.MaxUlp()

static struct data input[] =
{
#ifdef WINDOWS

{F64_POS_SNAN, F32_NEG_ZERO, EXC_CHK_INVL},
{F64_NEG_SNAN, F32_NEG_ZERO, EXC_CHK_INVL},
{F64_POS_QNAN, F32_NEG_ZERO, EXC_CHK_INVL},
{F64_NEG_QNAN, F32_NEG_ZERO, EXC_CHK_INVL},
{F64_POS_INF,  F32_NEG_ZERO, EXC_CHK_INVL},
{F64_NEG_INF,  F32_NEG_ZERO, EXC_CHK_INVL},
{F64_POS_ONE, 1, EXC_CHK_NONE},
{F64_NEG_ONE,-1, EXC_CHK_NONE},
{F64_POS_ZERO, 0, EXC_CHK_NONE},
{F64_NEG_ZERO,-0, EXC_CHK_NONE},
{F64_POS_HDENORM , 0, EXC_CHK_NONE},
{F64_NEG_HDENORM , 0, EXC_CHK_NONE},
{F64_POS_LDENORM , 0, EXC_CHK_NONE},
{F64_NEG_LDENORM , 0, EXC_CHK_NONE},
{F64_POS_HNORMAL , F32_NEG_ZERO, EXC_CHK_OVFL},
{F64_NEG_HNORMAL , F32_NEG_ZERO, EXC_CHK_OVFL},
{F64_POS_LNORMAL , 0, EXC_CHK_NONE},
{F64_NEG_LNORMAL , 0, EXC_CHK_NONE},
{F64_POS_PI      , 3, EXC_CHK_NONE},
{F64_NEG_PI      ,-3, EXC_CHK_NONE},
{F64_POS_PIBY2   , 1, EXC_CHK_NONE},
{F64_NEG_PIBY2   ,-1, EXC_CHK_NONE},

{0x0005fde623545abcLL, 0, EXC_CHK_NONE}, // denormal intermediate
{0x8002344ade5def12LL, 0, EXC_CHK_NONE}, // -denormal intermediate
{0x43b3c4eafedcab02LL, F32_NEG_ZERO, EXC_CHK_NONE}, // normal intermediate
{0xc5812e71245acfdbLL, F32_NEG_ZERO, EXC_CHK_OVFL}, // -normal intermediate
{0x7FFe1a5701234dc3LL, F32_NEG_ZERO, EXC_CHK_INVL}, // qnan intermediate
{0xFFF9123425dcba31LL, F32_NEG_ZERO, EXC_CHK_INVL}, // -qnan intermediate
{0xFFFFFFFFFFFFFFFFLL, F32_NEG_ZERO, EXC_CHK_INVL}, // -qnan max
{0x3FF921FB54442D18LL, 1, EXC_CHK_NONE}, // pi/2
{0x401921FB54442D18LL, 6, EXC_CHK_NONE}, // 2pi
{0x3FFB7E151628AED3LL, 1, EXC_CHK_NONE}, // e --
{0x4005BF0A8B145769LL, 2, EXC_CHK_NONE}, // e
{0x400DBF0A8B145769LL, 3, EXC_CHK_NONE}, // e ++
{0x3C4536B8B14B676CLL, 0, EXC_CHK_NONE}, // 0.0000000000000000023
{0x3FDFFFFBCE4217D3LL, 0, EXC_CHK_NONE}, // 0.4999989999999999999
{0x3FE000000000006CLL, 0, EXC_CHK_NONE}, // 0.500000000000012
{0xBBDB2752CE74FF42LL, 0, EXC_CHK_NONE}, // -0.000000000000000000023
{0xBFDFFFFBCE4217D3LL, 0, EXC_CHK_NONE}, // -0.4999989999999999999
{0xBFE000000000006CLL, 0, EXC_CHK_NONE}, // -0.500000000000012
{0x3FEFFFFFC49BD0DCLL, 0, EXC_CHK_NONE}, // 0.9999998893750006
{0x3FF0000000000119LL, 1, EXC_CHK_NONE}, // 1.0000000000000624998
{0x3FF7FFFEF39085F4LL, 1, EXC_CHK_NONE}, // 1.499998999999999967
{0x3FF8000000000001LL, 1, EXC_CHK_NONE}, // 1.50000000000000012
{0xBFEFFFFFC49BD0DCLL, 0, EXC_CHK_NONE}, // -0.9999998893750006
{0xBFF0000000000119LL,-1, EXC_CHK_NONE}, // -1.0000000000000624998
{0xBFF7FFFEF39085F4LL,-1, EXC_CHK_NONE}, // -1.499998999999999967
{0xBFF8000000000001LL,-1, EXC_CHK_NONE}, // -1.50000000000000012
{0x4000000000000000LL, 2, EXC_CHK_NONE}, // 2
{0xC000000000000000LL,-2, EXC_CHK_NONE}, // -2
{0x4024000000000000LL, 10, EXC_CHK_NONE}, // 10
{0xC024000000000000LL,-10, EXC_CHK_NONE}, // -10
{0x408F400000000000LL, 1000, EXC_CHK_NONE}, // 1000
{0xC08F400000000000LL,-1000, EXC_CHK_NONE}, // -1000
{0x4050D9999999999ALL, 67, EXC_CHK_NONE}, // 67.4
{0xC050D9999999999ALL,-67, EXC_CHK_NONE}, // -67.4
{0x409EFE6666666666LL, 1983, EXC_CHK_NONE}, // 1983.6
{0xC09EFE6666666666LL,-1983, EXC_CHK_NONE}, // -1983.6
{0x4055E00000000000LL, 87, EXC_CHK_NONE}, // 87.5
{0xC055E00000000000LL,-87, EXC_CHK_NONE}, // -87.5
{0x41002BC800000000LL, 132473, EXC_CHK_NONE}, // 132473
{0xC1002BC800000000LL,-132473, EXC_CHK_NONE}, // -132473
{0x41e0000000000000LL, F32_NEG_ZERO, EXC_CHK_OVFL}, // 2^31
{0x41e0000000000001LL, F32_NEG_ZERO, EXC_CHK_OVFL}, // 2^31 + 1
{0x41dfffffffdf5c29LL, 0x7fffffff,EXC_CHK_NONE}, // 2^31 -
{0xC1e0000000000000LL, F32_NEG_ZERO, EXC_CHK_OVFL}, // -2^31
{0xC1e0000000000001LL, F32_NEG_ZERO, EXC_CHK_OVFL}, // -(2^31 + 1)
{0xC1dfffffffdf5c29LL, 0x80000001,EXC_CHK_NONE}  // -(2^31 -)

#else

{F64_POS_SNAN, F64_NEG_ZERO, EXC_CHK_INVL},
{F64_NEG_SNAN, F64_NEG_ZERO, EXC_CHK_INVL},
{F64_POS_QNAN, F64_NEG_ZERO, EXC_CHK_INVL},
{F64_NEG_QNAN, F64_NEG_ZERO, EXC_CHK_INVL},
{F64_POS_INF,  F64_NEG_ZERO, EXC_CHK_INVL},
{F64_NEG_INF,  F64_NEG_ZERO, EXC_CHK_INVL},
{F64_POS_ONE, 1, EXC_CHK_NONE},
{F64_NEG_ONE,-1, EXC_CHK_NONE},
{F64_POS_ZERO, 0, EXC_CHK_NONE},
{F64_NEG_ZERO,-0, EXC_CHK_NONE},
{F64_POS_HDENORM , 0, EXC_CHK_NONE},
{F64_NEG_HDENORM , 0, EXC_CHK_NONE},
{F64_POS_LDENORM , 0, EXC_CHK_NONE},
{F64_NEG_LDENORM , 0, EXC_CHK_NONE},
{F64_POS_HNORMAL , F64_NEG_ZERO, EXC_CHK_INVL},
{F64_NEG_HNORMAL , F64_NEG_ZERO, EXC_CHK_INVL},
{F64_POS_LNORMAL , 0, EXC_CHK_NONE},
{F64_NEG_LNORMAL , 0, EXC_CHK_NONE},
{F64_POS_PI      , 3, EXC_CHK_NONE},
{F64_NEG_PI      ,-3, EXC_CHK_NONE},
{F64_POS_PIBY2   , 1, EXC_CHK_NONE},
{F64_NEG_PIBY2   ,-1, EXC_CHK_NONE},

{0x0005fde623545abcLL, 0, EXC_CHK_NONE}, // denormal intermediate
{0x8002344ade5def12LL, 0, EXC_CHK_NONE}, // -denormal intermediate
{0x43b3c4eafedcab02LL, 0x13c4eafedcab0200LL, EXC_CHK_NONE}, // normal intermediate
{0xc5812e71245acfdbLL, F64_NEG_ZERO, EXC_CHK_INVL}, // -normal intermediate
{0x7FFe1a5701234dc3LL, F64_NEG_ZERO, EXC_CHK_INVL}, // qnan intermediate
{0xFFF9123425dcba31LL, F64_NEG_ZERO, EXC_CHK_INVL}, // -qnan intermediate
{0xFFFFFFFFFFFFFFFFLL, F64_NEG_ZERO, EXC_CHK_INVL}, // -qnan max
{0x3FF921FB54442D18LL, 1, EXC_CHK_NONE}, // pi/2
{0x401921FB54442D18LL, 6, EXC_CHK_NONE}, // 2pi
{0x3FFB7E151628AED3LL, 1, EXC_CHK_NONE}, // e --
{0x4005BF0A8B145769LL, 2, EXC_CHK_NONE}, // e
{0x400DBF0A8B145769LL, 3, EXC_CHK_NONE}, // e ++
{0x3C4536B8B14B676CLL, 0, EXC_CHK_NONE}, // 0.0000000000000000023
{0x3FDFFFFBCE4217D3LL, 0, EXC_CHK_NONE}, // 0.4999989999999999999
{0x3FE000000000006CLL, 0, EXC_CHK_NONE}, // 0.500000000000012
{0xBBDB2752CE74FF42LL, 0, EXC_CHK_NONE}, // -0.000000000000000000023
{0xBFDFFFFBCE4217D3LL, 0, EXC_CHK_NONE}, // -0.4999989999999999999
{0xBFE000000000006CLL, 0, EXC_CHK_NONE}, // -0.500000000000012
{0x3FEFFFFFC49BD0DCLL, 0, EXC_CHK_NONE}, // 0.9999998893750006
{0x3FF0000000000119LL, 1, EXC_CHK_NONE}, // 1.0000000000000624998
{0x3FF7FFFEF39085F4LL, 1, EXC_CHK_NONE}, // 1.499998999999999967
{0x3FF8000000000001LL, 1, EXC_CHK_NONE}, // 1.50000000000000012
{0xBFEFFFFFC49BD0DCLL, 0, EXC_CHK_NONE}, // -0.9999998893750006
{0xBFF0000000000119LL,-1, EXC_CHK_NONE}, // -1.0000000000000624998
{0xBFF7FFFEF39085F4LL,-1, EXC_CHK_NONE}, // -1.499998999999999967
{0xBFF8000000000001LL,-1, EXC_CHK_NONE}, // -1.50000000000000012
{0x4000000000000000LL, 2, EXC_CHK_NONE}, // 2
{0xC000000000000000LL,-2, EXC_CHK_NONE}, // -2
{0x4024000000000000LL, 10, EXC_CHK_NONE}, // 10
{0xC024000000000000LL,-10, EXC_CHK_NONE}, // -10
{0x408F400000000000LL, 1000, EXC_CHK_NONE}, // 1000
{0xC08F400000000000LL,-1000, EXC_CHK_NONE}, // -1000
{0x4050D9999999999ALL, 67, EXC_CHK_NONE}, // 67.4
{0xC050D9999999999ALL,-67, EXC_CHK_NONE}, // -67.4
{0x409EFE6666666666LL, 1983, EXC_CHK_NONE}, // 1983.6
{0xC09EFE6666666666LL,-1983, EXC_CHK_NONE}, // -1983.6
{0x4055E00000000000LL, 87, EXC_CHK_NONE}, // 87.5
{0xC055E00000000000LL,-87, EXC_CHK_NONE}, // -87.5
{0x41002BC800000000LL, 132473, EXC_CHK_NONE}, // 132473
{0xC1002BC800000000LL,-132473, EXC_CHK_NONE}, // -132473
{0x43e0000000000000LL, F64_NEG_ZERO, EXC_CHK_INVL}, // 2^63
{0x43e0000000000001LL, F64_NEG_ZERO, EXC_CHK_INVL}, // 2^63 + 1
{0x43dFFFFFFFFFFFFFLL, 0x7ffffffffffffc00LL,EXC_CHK_NONE}, // 2^63 -
{0xC3e0000000000000LL, F64_NEG_ZERO, EXC_CHK_NONE}, // -2^63
{0xC3e0000000000001LL, F64_NEG_ZERO, EXC_CHK_INVL}, // -(2^63 + 1)
{0xC3dFFFFFFFFFFFFFLL, 0x8000000000000400LL,EXC_CHK_NONE}  // -(2^63 -)

#endif
};
