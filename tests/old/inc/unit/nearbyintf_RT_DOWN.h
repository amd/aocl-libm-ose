//R.obtained=FN_PROTOTYPE(nearbyintf)(P1.input)
//float, float,ExcFlags
//P1 R E
//unsigned int|float,unsigned int|float, ExcFlags|ExcFlags
//R.V3[j] = nearbyintf(P1.V3[j])
//float, float,ExcFlags
//ULP amd_ref_nearbyint_ULP(P1.V3[j],R.V3[j],&testdata[k].R.ulp[j], &testdata[k].R.relative_error[j])
//testdata[j].R.MaxUlp()

static struct data input[] =
{

{F32_POS_SNAN,F32_POS_QNAN,EXC_CHK_INVL},
{F32_NEG_SNAN,F32_NEG_QNAN,EXC_CHK_INVL},
{F32_POS_QNAN,F32_POS_QNAN,EXC_CHK_NONE},
{F32_NEG_QNAN,F32_NEG_QNAN,EXC_CHK_NONE},
{F32_POS_INF,F32_POS_INF,EXC_CHK_NONE},
{F32_NEG_INF,F32_NEG_INF,EXC_CHK_NONE},
{F32_POS_ONE,F32_POS_ONE,EXC_CHK_NONE},
{F32_NEG_ONE,F32_NEG_ONE,EXC_CHK_NONE},
{F32_POS_ZERO,F32_POS_ZERO,EXC_CHK_NONE},
{F32_NEG_ZERO,F32_NEG_ZERO,EXC_CHK_NONE},
{F32_POS_HDENORM,0x0       ,EXC_CHK_NONE},
{F32_NEG_HDENORM,0xbf800000,EXC_CHK_NONE},
{F32_POS_LDENORM,0x0       ,EXC_CHK_NONE},
{F32_NEG_LDENORM,0xbf800000,EXC_CHK_NONE},
{F32_POS_HNORMAL,0x7f7fffff,EXC_CHK_NONE},
{F32_NEG_HNORMAL,0xff7fffff,EXC_CHK_NONE},
{F32_POS_LNORMAL,0x0       ,EXC_CHK_NONE},
{F32_NEG_LNORMAL,0xbf800000,EXC_CHK_NONE},
{F32_POS_PI     ,0x40400000,EXC_CHK_NONE},
{F32_NEG_PI     ,0xc0800000,EXC_CHK_NONE},
{F32_POS_PIBY2  ,0x3f800000,EXC_CHK_NONE},
{F32_NEG_PIBY2  ,0xc0000000,EXC_CHK_NONE},
{0x00000001,0x00000000,EXC_CHK_NONE},  // denormal min
{0x0005fde6,0x00000000,EXC_CHK_NONE},  // denormal intermediate
{0x007fffff,0x00000000,EXC_CHK_NONE},  // denormal max
{0x80000001,0xbf800000,EXC_CHK_NONE},  // -denormal min
{0x805def12,0xbf800000,EXC_CHK_NONE},  // -denormal intermediate
{0x807FFFFF,0xbf800000,EXC_CHK_NONE},  // -denormal max
{0x00800000,0x00000000,EXC_CHK_NONE},  // normal min
{0x43b3c4ea,0x43b38000,EXC_CHK_NONE},  // normal intermediate
{0x7f7fffff,0x7f7fffff,EXC_CHK_NONE},  // normal max
{0x80800000,0xbf800000,EXC_CHK_NONE},  // -normal min
{0xc5812e71,0xc5813000,EXC_CHK_NONE},  // -normal intermediate
{0xFF7FFFFF,0xff7fffff,EXC_CHK_NONE},  // -normal max
{0x7F800000,0x7f800000,EXC_CHK_NONE},  // inf
{0xfF800000,0xff800000,EXC_CHK_NONE},  // -inf
{0x7Fc00000,0x7fc00000,EXC_CHK_NONE},  // qnan min
{0x7Fe1a570,0x7fe1a570,EXC_CHK_NONE},  // qnan intermediate
{0x7FFFFFFF,0x7fffffff,EXC_CHK_NONE},  // qnan max
{0xfFc00000,0xffc00000,EXC_CHK_NONE},  // indeterninate
{0xFFC00001,0xffc00001,EXC_CHK_NONE},  // -qnan min
{0xFFd2ba31,0xffd2ba31,EXC_CHK_NONE},  // -qnan intermediate
{0xFFFFFFFF,0xffffffff,EXC_CHK_NONE},  // -qnan max
{0x3FC90FDB,0x3f800000,EXC_CHK_NONE},  // pi/2
{0x40490FDB,0x40400000,EXC_CHK_NONE},  // pi
{0x40C90FDB,0x40c00000,EXC_CHK_NONE},  // 2pi
{0x402DF853,0x40000000,EXC_CHK_NONE},  // e --
{0x402DF854,0x40000000,EXC_CHK_NONE},  // e
{0x402DF855,0x40000000,EXC_CHK_NONE},  // e ++
{0x00000000,0x00000000,EXC_CHK_NONE},  // 0
{0x37C0F01F,0x00000000,EXC_CHK_NONE},  // 0.000023
{0x3EFFFEB0,0x00000000,EXC_CHK_NONE},  // 0.49999
{0x3F0000C9,0x00000000,EXC_CHK_NONE},  // 0.500012
{0x80000000,0x80000000,EXC_CHK_NONE},  // -0
{0xb7C0F01F,0xbf800000,EXC_CHK_NONE},  // -0.000023
{0xbEFFFEB0,0xbf800000,EXC_CHK_NONE},  // -0.49999
{0xbF0000C9,0xbf800000,EXC_CHK_NONE},  // -0.500012
{0x3f800000,0x3f800000,EXC_CHK_NONE},  // 1
{0x3f700001,0x00000000,EXC_CHK_NONE},  // 0.93750006
{0x3F87FFFE,0x3f800000,EXC_CHK_NONE},  // 1.0624998
{0x3FBFFFAC,0x3f800000,EXC_CHK_NONE},  // 1.49999
{0x3FC00064,0x3f800000,EXC_CHK_NONE},  // 1.500012
{0xbf800000,0xbf800000,EXC_CHK_NONE},  // -1
{0xbf700001,0xbf800000,EXC_CHK_NONE},  // -0.93750006
{0xbF87FFFE,0xc0000000,EXC_CHK_NONE},  // -1.0624998
{0xbFBFFFAC,0xc0000000,EXC_CHK_NONE},  // -1.49999
{0xbFC00064,0xc0000000,EXC_CHK_NONE},  // -1.500012
{0x40000000,0x40000000,EXC_CHK_NONE},  // 2
{0xc0000000,0xc0000000,EXC_CHK_NONE},  // -2
{0x41200000,0x41200000,EXC_CHK_NONE},  // 10
{0xc1200000,0xc1200000,EXC_CHK_NONE},  // -10
{0x447A0000,0x447a0000,EXC_CHK_NONE},  // 1000
{0xc47A0000,0xc47a0000,EXC_CHK_NONE},  // -1000
{0x4286CCCC,0x42860000,EXC_CHK_NONE},  // 67.4
{0xc286CCCC,0xc2880000,EXC_CHK_NONE},  // -67.4
{0x44F7F333,0x44f7e000,EXC_CHK_NONE},  // 1983.6
{0xc4F7F333,0xc4f80000,EXC_CHK_NONE},  // -1983.6
{0x42AF0000,0x42ae0000,EXC_CHK_NONE},  // 87.5
{0xc2AF0000,0xc2b00000,EXC_CHK_NONE},  // -87.5
{0x48015E40,0x48015e40,EXC_CHK_NONE},  // 132473
{0xc8015E40,0xc8015e40,EXC_CHK_NONE},  // -132473
{0x4B000000,0x4b000000,EXC_CHK_NONE},  // 2^23
{0x4B000001,0x4b000001,EXC_CHK_NONE},  // 2^23 + 1
{0x4AFFFFFF,0x4afffffe,EXC_CHK_NONE},  // 2^23 -1 + 0.5
{0xcB000000,0xcb000000,EXC_CHK_NONE},  // -2^23
{0xcB000001,0xcb000001,EXC_CHK_NONE},  // -(2^23 + 1)
{0xcAFFFFFF,0xcb000000,EXC_CHK_NONE}   // -(2^23 -1 + 0.5)

};
