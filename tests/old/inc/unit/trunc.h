//R.obtained=FN_PROTOTYPE(trunc)(P1.input)
//double,double,ExcFlags
//P1 R E
//unsigned long long int|double, unsigned  long long int|double,ExcFlags|ExcFlags
//R.V3[j] = amd_ref_trunc(P1.V3[j])
//double double ExcFlags
//ULP amd_ref_trunc_ULP(P1.V3[j],R.V3[j],&testdata[k].R.ulp[j], &testdata[k].R.relative_error[j])
//testdata[j].R.MaxUlp()

static struct data input[] =
{
    /*Constant inputs from the Constants.h*/
    {F64_POS_SNAN,F64_POS_QNAN,EXC_CHK_INVL}, // invalid
    {F64_NEG_SNAN,F64_POS_QNAN,EXC_CHK_INVL}, // invalid
    {F64_POS_SNAN_Q,F64_POS_QNAN,EXC_CHK_NONE}, // 
    {F64_NEG_SNAN_Q,F64_POS_QNAN,EXC_CHK_NONE}, // 
    {F64_POS_QNAN,F64_POS_QNAN,EXC_CHK_NONE}, // 
    {F64_NEG_QNAN,F64_POS_QNAN,EXC_CHK_NONE}, // 
    {F64_POS_INF,F64_POS_INF,EXC_CHK_NONE}, // 
    {F64_NEG_INF,F64_NEG_INF,EXC_CHK_NONE}, // 
    {F64_POS_ONE,F64_POS_ONE,EXC_CHK_NONE}, // 
    {F64_NEG_ONE,F64_NEG_ONE,EXC_CHK_NONE}, // 
    {F64_NEG_ZERO,F64_NEG_ZERO,EXC_CHK_NONE}, // 
    {F64_POS_ZERO,F64_POS_ZERO,EXC_CHK_NONE}, // 
    {F64_POS_HDENORM,F64_POS_ZERO,EXC_CHK_NONE}, // 
    {F64_NEG_HDENORM,F64_NEG_ZERO,EXC_CHK_NONE}, // 
    {F64_POS_LDENORM,F64_POS_ZERO,EXC_CHK_NONE}, // 
    {F64_NEG_LDENORM,F64_NEG_ZERO,EXC_CHK_NONE}, //

    {F64_POS_HNORMAL,F64_POS_HNORMAL,EXC_CHK_NONE}, // 
    {F64_NEG_HNORMAL,F64_NEG_HNORMAL,EXC_CHK_NONE}, // 
    {F64_POS_LNORMAL,F64_POS_ZERO,EXC_CHK_NONE}, // 
    {F64_NEG_LNORMAL,F64_NEG_ZERO,EXC_CHK_NONE}, // 

    {F64_POS_PI,0x4008000000000000LL,EXC_CHK_NONE}, // 
    {F64_NEG_PI,0xC008000000000000LL,EXC_CHK_NONE}, // 
    {F64_POS_PIBY2,0x3ff0000000000000LL,EXC_CHK_NONE}, // 
    {F64_NEG_PIBY2,0xbff0000000000000LL,EXC_CHK_NONE}, // 
    /*Some Common Inputs*/
    {0x3Fe1234ABCDEF123LL,0x0000000000000000LL,EXC_CHK_NONE},
    {0xbFe1234ABCDEF123LL,0x8000000000000000LL,EXC_CHK_NONE},
    {0x3FeA234ABCDEF123LL,0x0000000000000000LL,EXC_CHK_NONE},
    {0xbFeA234ABCDEF123LL,0x8000000000000000LL,EXC_CHK_NONE},
    {0x3FF1234ABCDEF123LL,0x3ff0000000000000LL,EXC_CHK_NONE},
    {0xbFF1234ABCDEF123LL,0xbff0000000000000LL,EXC_CHK_NONE},
    {0x3FFA234ABCDEF123LL,0x3ff0000000000000LL,EXC_CHK_NONE},
    {0xbFFA234ABCDEF123LL,0xbff0000000000000LL,EXC_CHK_NONE},
    {0x400853451234ABCDLL,0x4008000000000000LL,EXC_CHK_NONE},
    {0xc00853451234ABCDLL,0xc008000000000000LL,EXC_CHK_NONE},
    {0x4360056187178ABCLL,0x4360056187178ABCLL,EXC_CHK_NONE},
    {0xc36ABCDEF0000000LL,0xc36ABCDEF0000000LL,EXC_CHK_NONE},
    {0x4340000000000000LL,0x4340000000000000LL,EXC_CHK_NONE},
    {0xc340000000000000LL,0xc340000000000000LL,EXC_CHK_NONE},
    {0x4351234567891222LL,0x4351234567891222LL,EXC_CHK_NONE},
    {0xc351234567891222LL,0xc351234567891222LL,EXC_CHK_NONE},
    {0x433ABCDEF1234567LL,0x433abcdef1234567LL,EXC_CHK_NONE},
    {0xc33ABCDEF1234567LL,0xc33abcdef1234567LL,EXC_CHK_NONE},
    {0x431ABCDEF1234567LL,0x431abcdef1234564LL,EXC_CHK_NONE},
    {0xc31ABCDEF1234567LL,0xc31abcdef1234564LL,EXC_CHK_NONE},
    {0x411ABCDEF1234567LL,0x411abcdc00000000LL,EXC_CHK_NONE},
    {0xc11ABCDEF1234567LL,0xc11abcdc00000000LL,EXC_CHK_NONE},
    {0x400ABCDEF1234567LL,0x4008000000000000LL,EXC_CHK_NONE},
    {0xc00ABCDEF1234567LL,0xc008000000000000LL,EXC_CHK_NONE},
    {0x4006BCDEF1234567LL,0x4000000000000000LL,EXC_CHK_NONE},
    {0xc006BCDEF1234567LL,0xc000000000000000LL,EXC_CHK_NONE},

};

