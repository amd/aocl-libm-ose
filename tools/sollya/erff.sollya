// polynomial for approximating erff(x) using fpminimax  

restart ;

N = 1000;				// Number of points to check in the give range
prec = 60;

deg = 20;  // poly degree

a = 0.0; // Lower bound of range
b = 3.9192059040069580078125; // Upper bound of range,  beyond which single prec erff should evaluate to 1.0, so erf(b)=2^(-25)

b0 = 0.8;
b1 = 1.1;
b2 = 1.6;
b3 = 2.2;
b4 = 2.85;
b5 = 3.35;

d = [a ; b];

// f(x) s the given function for which we seek polynomial with minimal absolute error
f = erf(x);

// Generate basis of polynomial f(x) 
P = [||] ; 
for i from 1 to deg by 1  do {P = P@[|i|];} ;

// return p that minimizes |f(x) - poly(x)|
poly = fpminimax(f,P,[|DD...|],[a;b],floating,relative) ;

print("abs error:", supnorm(poly, f, [a;b], absolute, 2^(-30)));
print("rel error:", supnorm(poly, f, [a+2^(-30);b], relative, 2^(-20)));
// print("abs error:", infnorm(f(x)-poly(x), [a;b]));
// print("rel error:", infnorm(poly(x)/f(x)-1, [a+2^(-50);b]));

// print polynomial in Horner form

display = hexadecimal;
poly;

f=poly;
deg=16;
P = [||] ; 
for i from 1 to deg by 1  do {P = P@[|i|];} ;

// return p that minimizes |f(x) - poly(x)|
poly = fpminimax(f,P,[|DD...|],[a;b],floating,relative) ;
display=decimal;

print("abs error:", supnorm(poly, f, [a;b], absolute, 2^(-30)));
print("rel error:", supnorm(poly, f, [a+2^(-30);b], relative, 2^(-20)));
// print("abs error:", infnorm(f(x)-poly(x), [a;b]));
// print("rel error:", infnorm(poly(x)/f(x)-1, [a+2^(-50);b]));

// print polynomial in Horner form

print("\nSingle interval polynomial:\n");

display = hexadecimal;
poly;



print("\nUpper interval polynomial:\n");
deg = 5;
f = erf(x);

// Generate basis of polynomial f(x) 
P = [||] ; 
for i from 1 to deg by 1  do {P = P@[|i|];} ;
// return p that minimizes |f(x) - poly(x)|
poly = fpminimax(f,P,[|DD...|],[b5;b],floating,relative) ;

display=decimal;
print("abs error:", supnorm(poly, f, [b5;b], absolute, 2^(-30)));
print("rel error:", supnorm(poly, f, [b5;b], relative, 2^(-20)));

display = hexadecimal;
poly;

print("\n2.85-3.35 interval polynomial:\n");
deg = 5;
f = erf(x);

// Generate basis of polynomial f(x) 
P = [||] ; 
for i from 1 to deg by 1  do {P = P@[|i|];} ;
// return p that minimizes |f(x) - poly(x)|
poly = fpminimax(f,P,[|DD...|],[b4;b5],floating,relative) ;
display=decimal;

print("abs error:", supnorm(poly, f, [b4;b5], absolute, 2^(-30)));
print("rel error:", supnorm(poly, f, [b4;b5], relative, 2^(-20)));

display = hexadecimal;
poly;

print("\n2.1-2.85 interval polynomial:\n");
deg = 6;
f = erf(x);

// Generate basis of polynomial f(x) 
P = [||] ; 
for i from 1 to deg by 1  do {P = P@[|i|];} ;
// return p that minimizes |f(x) - poly(x)|
poly = fpminimax(f,P,[|DD...|],[b3;b4],floating,relative) ;
display=decimal;

print("abs error:", supnorm(poly, f, [b3;b4], absolute, 2^(-30)));
print("rel error:", supnorm(poly, f, [b3;b4], relative, 2^(-20)));

display = hexadecimal;
poly;

print("\n0.8-1.1 interval polynomial:\n");
deg = 5;
f = erf(x);

// Generate basis of polynomial f(x) 
P = [||] ; 
for i from 1 to deg by 1  do {P = P@[|i|];} ;
// return p that minimizes |f(x) - poly(x)|
poly = fpminimax(f,P,[|DD...|],[b0;b1],floating,relative) ;
display=decimal;

print("abs error:", supnorm(poly, f, [b0;b1], absolute, 2^(-30)));
print("rel error:", supnorm(poly, f, [b0;b1], relative, 2^(-20)));

display = hexadecimal;
poly;

print("\n1.1-1.6 interval polynomial:\n");
deg = 6;
f = erf(x);

// Generate basis of polynomial f(x) 
P = [||] ; 
for i from 1 to deg by 1  do {P = P@[|i|];} ;
// return p that minimizes |f(x) - poly(x)|
poly = fpminimax(f,P,[|DD...|],[b1;b2],floating,relative) ;
display=decimal;

print("abs error:", supnorm(poly, f, [b1;b2], absolute, 2^(-30)));
print("rel error:", supnorm(poly, f, [b1;b2], relative, 2^(-20)));

display = hexadecimal;
poly;

print("\n0-0.8 interval polynomial:\n");
deg = 9;
f = erf(x);

// Generate basis of polynomial f(x) 
P = [||] ; 
for i from 1 to deg by 2 do {P = P@[|i|];} ;
// return p that minimizes |f(x) - poly(x)|
poly = fpminimax(f,P,[|DD...|],[a;b0],floating,relative) ;
display=decimal;

print("abs error:", supnorm(poly, f, [a;b0], absolute, 2^(-30)));
print("rel error:", supnorm(poly, f, [a;b0], relative, 2^(-20)));

display = hexadecimal;
poly;

print("\n1.6-2.2 interval polynomial:\n");
deg = 6;
f = erf(x);

// Generate basis of polynomial f(x) 
P = [||] ; 
for i from 1 to deg by 1  do {P = P@[|i|];} ;
// return p that minimizes |f(x) - poly(x)|
poly = fpminimax(f,P,[|DD...|],[b2;b3],floating,relative) ;
display=decimal;

print("abs error:", supnorm(poly, f, [b2;b3], absolute, 2^(-30)));
print("rel error:", supnorm(poly, f, [b2;b3], relative, 2^(-20)));

display = hexadecimal;
poly;